services:
  mongo:
    image: mongo:6.0
    container_name: mongo
    restart: always
    ports:
      - "${MONGO_DOCKER_HOST_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-example}
    volumes:
      # Persists MongoDB data to a host path.
      # IMPORTANT: Ensure /home/patrick/data/db exists on your host or change this path.
      # Alternatively, use a Docker named volume for better portability:
      # - mongo_data:/data/db
      - /home/patrick/data/db:/data/db
    healthcheck:
      test: |
        mongosh \
        --norc \
        --host localhost \
        --username "${MONGO_ROOT_USER:-root}" \
        --password "${MONGO_ROOT_PASSWORD:-example}" \
        --authenticationDatabase "${MONGO_AUTH_SOURCE_DB:-admin}" \
        --eval "try { db.adminCommand('ping') } catch (e) { print(e); quit(1); }" \
        --quiet
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - npm_network # Connect to the external network

  auth-app:
    build:
      context: ./js-auth # Path to your auth app's source code and Dockerfile
      dockerfile: Dockerfile # Assumes Dockerfile is named 'Dockerfile' in the context path
    container_name: js-auth
    restart: always
    working_dir: /usr/src/app
    volumes:
      - ./js-auth:/usr/src/app # Mounts local source for development
      - /usr/src/app/node_modules # Avoids overwriting node_modules from host
    command: sh -c "npm install && node app.js"
    ports:
      - "${APP_DOCKER_HOST_PORT:-7001}:${AUTH_APP_CONTAINER_PORT:-7000}"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${AUTH_APP_CONTAINER_PORT:-7000}
      APP_BASE_URL: ${APP_BASE_URL}
      MONGO_URI: mongodb://${MONGO_ROOT_USER:-root}:${MONGO_ROOT_PASSWORD:-example}@mongo:27017/${MONGO_AUTH_DB_NAME:-js_auth_db}?authSource=${MONGO_AUTH_SOURCE_DB:-admin}&directConnection=true
      MONGO_AUTH_DB_NAME: ${MONGO_AUTH_DB_NAME:-js_auth_db}
      MONGO_SESSIONS_DB_NAME: ${MONGO_SESSIONS_DB_NAME:-js_auth_db} # Used if auth app also stores sessions separately or for consistency
      MONGO_AUTH_SOURCE_DB: ${MONGO_AUTH_SOURCE_DB:-admin}
      SESSION_SECRET: ${SESSION_SECRET}
      CSRF_SECRET: ${CSRF_SECRET}
      MICROSOFT_CLIENT_ID: ${MICROSOFT_CLIENT_ID}
      MICROSOFT_CLIENT_SECRET: ${MICROSOFT_CLIENT_SECRET}
      MICROSOFT_TENANT_ID: ${MICROSOFT_TENANT_ID}
      EMAIL_SENDER_ADDRESS: ${EMAIL_SENDER_ADDRESS}
      FIRST_ADMIN_EMAIL: ${FIRST_ADMIN_EMAIL}
      FIRST_ADMIN_PASSWORD: ${FIRST_ADMIN_PASSWORD}
      # Session sharing configuration
      SESSION_COOKIE_DOMAIN: ${SESSION_COOKIE_DOMAIN:-.korczewski.de}
      SESSION_COOKIE_NAME: ${SESSION_COOKIE_NAME:-quiz_auth_session}
      SESSION_COOKIE_PATH: ${SESSION_COOKIE_PATH:-/}
      SESSION_COOKIE_SAME_SITE: ${SESSION_COOKIE_SAME_SITE:-none}
      SESSION_COOKIE_SECURE: ${SESSION_COOKIE_SECURE:-true}
      SESSION_COOKIE_MAX_AGE: ${SESSION_COOKIE_MAX_AGE:-604800000}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-https://auth.korczewski.de,https://game.korczewski.de,http://localhost:4000,http://localhost:7001}
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - npm_network # Connect to the external network

  quiz-app:
    build:
      context: ./webquiz # Path to your quiz app's source code and Dockerfile
      dockerfile: Dockerfile # Assumes Dockerfile is named 'Dockerfile' in the context path
    container_name: webquiz
    restart: always
    working_dir: /usr/src/app
    volumes:
      - ./webquiz:/usr/src/app # Mounts local source for development
      - /usr/src/app/node_modules # Avoids overwriting node_modules from host
    # Ensure your quiz-app's Dockerfile uses CMD ["node", "index.js"]
    # This command will run npm install on every start if node_modules isn't persisted correctly.
    # For production, you'd typically rely on RUN npm install in the Dockerfile and just use `node index.js`.
    command: sh -c "npm install && node index.js"
    ports:
      - "${QUIZ_APP_HOST_PORT:-4000}:${QUIZ_APP_CONTAINER_PORT:-3000}"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${QUIZ_APP_CONTAINER_PORT:-3000}
      # This MONGO_URI is for the quiz-app's session store
      MONGO_URI: mongodb://${MONGO_ROOT_USER:-root}:${MONGO_ROOT_PASSWORD:-example}@mongo:27017/${MONGO_SESSIONS_DB_NAME:-js_auth_db}?authSource=${MONGO_AUTH_SOURCE_DB:-admin}&directConnection=true
      MONGO_SESSIONS_DB_NAME: ${MONGO_SESSIONS_DB_NAME:-js_auth_db}
      MONGO_AUTH_SOURCE_DB: ${MONGO_AUTH_SOURCE_DB:-admin} # Usually 'admin' for the root user
      SESSION_SECRET: ${SESSION_SECRET}
      # Session sharing configuration
      SESSION_COOKIE_DOMAIN: ${SESSION_COOKIE_DOMAIN:-.korczewski.de}
      SESSION_COOKIE_NAME: ${SESSION_COOKIE_NAME:-quiz_auth_session}
      SESSION_COOKIE_PATH: ${SESSION_COOKIE_PATH:-/}
      SESSION_COOKIE_SAME_SITE: ${SESSION_COOKIE_SAME_SITE:-none}
      SESSION_COOKIE_SECURE: ${SESSION_COOKIE_SECURE:-true}
      SESSION_COOKIE_MAX_AGE: ${SESSION_COOKIE_MAX_AGE:-604800000}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-https://auth.korczewski.de,https://game.korczewski.de,http://localhost:4000,http://localhost:7001}
      APP_BASE_URL: ${APP_BASE_URL} # Auth app URL
      QUIZ_APP_BASE_URL: ${QUIZ_APP_BASE_URL:-https://game.korczewski.de} # Quiz app URL
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - npm_network # Connect to the external network

networks:
  npm_network: # Define npm_network
    external: true # Specify that it's an externally created network

# The local 'quiznet' network definition has been removed.

# If you were using a named volume for mongo_data instead of a host path:
# volumes:
#   mongo_data: